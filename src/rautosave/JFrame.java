/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rautosave;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Properties;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.apache.commons.io.FileSystemUtils;

/**
 *
 * @author ADMINIBM
 */
public class JFrame extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form JFrame
     */
    Autosave autosave;
    Properties prop;
    Timer timer;
    long startTime;

    public JFrame() {
        this.setTitle("I am an autosaver. Yeah.");
        autosave = new Autosave();
        prop = new Properties();
        timer = new Timer();
        initComponents();
        this.start.setEnabled(false);
        this.stop.setEnabled(false);
        this.minutes.addActionListener(this);
        this.saveArea.setLineWrap(true);
        this.saveArea.setWrapStyleWord(true);
        if (this.autosave.loadProperties()) {
            this.inputTo.setText(this.autosave.getPathTo());
            this.minutes.setText(String.valueOf(this.autosave.getMinutes()));
            if (!this.autosave.getMinutes().toString().isEmpty() && this.autosave.getPathFrom() != null
                    && this.autosave.getPathTo() != null) {
                this.start.setEnabled(true);
            }
        }
        try {
            this.jLabel10.setText(Double.toString(Math.round(FileSystemUtils.freeSpaceKb("/") * 0.000001)) + " (aproximately)");
        } catch (IOException ex) {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.autosave.setFrame(this);
    }

    @Override
    public void actionPerformed(ActionEvent evt) {
    }

    public void setSaveArea(String text) {
        this.saveArea.append(text);
    }

    public String getTimer() {
        long elapsedTime = System.currentTimeMillis() - this.startTime;
        long elapsedSeconds = elapsedTime / 1000;
        long secondsDisplay = elapsedSeconds % 60;
        long elapsedMinutes = elapsedSeconds / 60;
        return elapsedMinutes + ":" + secondsDisplay;
    }

    public void setFileSizeArea(String text) {
        this.fileSizeArea.setText(text);
    }

    public Integer getMinutes() {
        int nbMinutes = 0;
        try { 
            nbMinutes = Integer.parseInt(minutes.getText());
            return nbMinutes;
        }catch (NumberFormatException e) {
            return 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        choose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        minutes = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        copyTo = new javax.swing.JButton();
        inputTo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        saveArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        inputFrom = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        fileSizeArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setForeground(java.awt.Color.black);

        jLabel1.setBackground(java.awt.Color.lightGray);
        jLabel1.setText("Choose the folder / file to copy:");

        choose.setBackground(java.awt.Color.lightGray);
        choose.setText("Choose");
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        jLabel2.setBackground(java.awt.Color.lightGray);
        jLabel2.setText("Every (min):");

        minutes.setText("0");
        minutes.setDisabledTextColor(new java.awt.Color(51, 51, 51));

        start.setBackground(java.awt.Color.lightGray);
        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setBackground(java.awt.Color.lightGray);
        stop.setText("Stop");

        jLabel3.setBackground(java.awt.Color.lightGray);
        jLabel3.setText("Choose the folder to copy to:");

        copyTo.setBackground(java.awt.Color.lightGray);
        copyTo.setText("Choose");
        copyTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyToActionPerformed(evt);
            }
        });

        inputTo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        inputTo.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        inputTo.setEnabled(false);
        inputTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                none(evt);
            }
        });

        jLabel4.setBackground(java.awt.Color.lightGray);
        jLabel4.setText("Copy to:");

        jLabel5.setBackground(java.awt.Color.lightGray);
        jLabel5.setText("AutoSaver application");

        saveArea.setColumns(20);
        saveArea.setLineWrap(true);
        saveArea.setRows(5);
        saveArea.setText("Results:");
        saveArea.setWrapStyleWord(true);
        saveArea.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        saveArea.setEnabled(false);
        jScrollPane1.setViewportView(saveArea);

        jSeparator1.setBackground(java.awt.Color.lightGray);
        jSeparator1.setForeground(java.awt.Color.black);

        jLabel6.setBackground(java.awt.Color.lightGray);
        jLabel6.setText("Choose from:");

        inputFrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        inputFrom.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        inputFrom.setEnabled(false);

        jLabel7.setText("File size:");

        jLabel8.setText("Space left on the hard disk:");

        jScrollPane4.setHorizontalScrollBar(null);

        fileSizeArea.setColumns(20);
        fileSizeArea.setLineWrap(true);
        fileSizeArea.setRows(5);
        fileSizeArea.setWrapStyleWord(true);
        fileSizeArea.setAutoscrolls(false);
        fileSizeArea.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        fileSizeArea.setEnabled(false);
        jScrollPane4.setViewportView(fileSizeArea);

        jMenu1.setText("About");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(choose))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyTo))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(46, 46, 46)
                                .addComponent(inputTo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(inputFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(start)
                                .addGap(18, 18, 18)
                                .addComponent(stop)))
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(choose))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(copyTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(start)
                            .addComponent(stop))))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
        String inputFrom = this.autosave.choose(JFileChooser.FILES_AND_DIRECTORIES);
        this.inputFrom.setText(inputFrom);
        this.autosave.setPathFrom(inputFrom);
        if (this.inputFrom.getText().isEmpty()) {
            return;
        }
        this.start.setEnabled(true);
        this.autosave.setFileInformation();
    }//GEN-LAST:event_chooseActionPerformed

    private void copyToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyToActionPerformed
        String inputTo = this.autosave.choose(JFileChooser.DIRECTORIES_ONLY);
        this.inputTo.setText(inputTo);
        this.autosave.setPathTo(inputTo);
    }//GEN-LAST:event_copyToActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed

        this.stop.setEnabled(true);
        try {
            this.autosave.setMinutes(Integer.parseInt(this.minutes.getText()));
            Integer times = this.autosave.startTimer(this.autosave);
            long startTime = System.currentTimeMillis();
        } catch (IOException ex) {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startActionPerformed

    private void none(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_none

    }//GEN-LAST:event_none

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        new JOptionPane().showMessageDialog(this, "<html><body><p style='width: 200px;'>As it's quite frustrating to lose data while you could be editing, I made this simple software to copy/paste automatically every time you want. I'am simply a developer coding for fun. Find me on github if you want as Kyalha. Finished on the 26th of September 2018.</p></body></html>");
    }//GEN-LAST:event_jMenu1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choose;
    private javax.swing.JButton copyTo;
    private javax.swing.JTextArea fileSizeArea;
    private javax.swing.JTextField inputFrom;
    private javax.swing.JTextField inputTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField minutes;
    private javax.swing.JTextArea saveArea;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
